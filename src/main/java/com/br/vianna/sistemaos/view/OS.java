/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.br.vianna.sistemaos.view;

import com.br.vianna.sistemaos.DAO.impl.ClienteDAO;
import com.br.vianna.sistemaos.DAO.impl.OrdemServicoDAO;
import com.br.vianna.sistemaos.DAO.impl.UsuarioDAO;
import com.br.vianna.sistemaos.model.Cliente;
import com.br.vianna.sistemaos.model.OrdemServico;
import com.br.vianna.sistemaos.model.Usuario;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author arthu
 */
public class OS extends javax.swing.JDialog {

    private ArrayList<Usuario> usuarios;
    private ArrayList<Cliente> clientes;
    private OrdemServico os;

    /**
     * Creates new form OS
     */

    public OS(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        os = new OrdemServico();
        os.setId(0);

        try {

            this.usuarios = new UsuarioDAO().buscarTodos();
            this.clientes = new ClienteDAO().buscarTodos();

            geraListaFuncionarios();
            geraListaClientes();

        } catch (ClassNotFoundException | SQLException ex) {

            Logger.getLogger(OS.class.getName()).log(Level.SEVERE, null, ex);

        }

        os.iniciar();
        os.setProtocolo();

        jtProtocolo.setText(os.getProtocolo());

        Timestamp ts = os.getInicio();

        jtAberturaChamado.setText(formataDataString(ts));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPOs = new javax.swing.JPanel();
        jlCliente = new javax.swing.JLabel();
        jcbCliente = new javax.swing.JComboBox<>();
        jbCadastrarCliente = new javax.swing.JButton();
        jlFuncinario = new javax.swing.JLabel();
        jcbFuncionario = new javax.swing.JComboBox<>();
        jlProtocolo = new javax.swing.JLabel();
        jtProtocolo = new javax.swing.JTextField();
        jlAberturaChamado = new javax.swing.JLabel();
        jtAberturaChamado = new javax.swing.JTextField();
        jlFechamentoChamado = new javax.swing.JLabel();
        jtFechamentoChamado = new javax.swing.JTextField();
        jlDescricao = new javax.swing.JLabel();
        ispDescricao = new javax.swing.JScrollPane();
        jtaDescricao = new javax.swing.JTextArea();
        jlValor = new javax.swing.JLabel();
        jfValor = new javax.swing.JFormattedTextField();
        jlImageOS = new javax.swing.JLabel();
        jbCriarChamado = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPOs.setBackground(new java.awt.Color(63, 55, 201));
        jPOs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPOs.setMaximumSize(new java.awt.Dimension(1250, 690));
        jPOs.setMinimumSize(new java.awt.Dimension(1250, 690));

        jlCliente.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jlCliente.setForeground(new java.awt.Color(0, 0, 0));
        jlCliente.setText("Cliente:");

        jcbCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));

        jbCadastrarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/OsUserCadastro.png"))); // NOI18N
        jbCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarClienteActionPerformed(evt);
            }
        });

        jlFuncinario.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jlFuncinario.setForeground(new java.awt.Color(0, 0, 0));
        jlFuncinario.setText("Funionário:");

        jcbFuncionario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));

        jlProtocolo.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jlProtocolo.setForeground(new java.awt.Color(0, 0, 0));
        jlProtocolo.setText("Protocolo:");

        jtProtocolo.setEditable(false);
        jtProtocolo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jtProtocolo.setEnabled(false);

        jlAberturaChamado.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jlAberturaChamado.setForeground(new java.awt.Color(0, 0, 0));
        jlAberturaChamado.setText("Abertura do chamado:");
        jlAberturaChamado.setAlignmentX(0.5F);

        jtAberturaChamado.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jtAberturaChamado.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jtAberturaChamado.setEnabled(false);

        jlFechamentoChamado.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jlFechamentoChamado.setForeground(new java.awt.Color(0, 0, 0));
        jlFechamentoChamado.setText("Fechamento do chamado:");

        jtFechamentoChamado.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jtFechamentoChamado.setEnabled(false);

        jlDescricao.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jlDescricao.setForeground(new java.awt.Color(0, 0, 0));
        jlDescricao.setText("Descrição:");

        jtaDescricao.setColumns(20);
        jtaDescricao.setRows(5);
        jtaDescricao.setToolTipText("");
        jtaDescricao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ispDescricao.setViewportView(jtaDescricao);

        jlValor.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jlValor.setForeground(new java.awt.Color(0, 0, 0));
        jlValor.setText("Valor:");

        jfValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jlImageOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/OSImage.png"))); // NOI18N

        jbCriarChamado.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jbCriarChamado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/cadastrar.png"))); // NOI18N
        jbCriarChamado.setText("Criar chamado");
        jbCriarChamado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCriarChamadoActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPOsLayout = new javax.swing.GroupLayout(jPOs);
        jPOs.setLayout(jPOsLayout);
        jPOsLayout.setHorizontalGroup(
            jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOsLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPOsLayout.createSequentialGroup()
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlFuncinario)
                            .addComponent(jlCliente)
                            .addComponent(jlProtocolo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPOsLayout.createSequentialGroup()
                                .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jcbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbCadastrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlFechamentoChamado)
                                    .addComponent(jlAberturaChamado))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtAberturaChamado, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(jtFechamentoChamado)))))
                    .addGroup(jPOsLayout.createSequentialGroup()
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ispDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDescricao)
                            .addGroup(jPOsLayout.createSequentialGroup()
                                .addComponent(jlValor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jbCriarChamado))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jlImageOS, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPOsLayout.setVerticalGroup(
            jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOsLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPOsLayout.createSequentialGroup()
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbCadastrarCliente)
                            .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jlCliente)
                                .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlFuncinario)
                            .addComponent(jcbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlProtocolo)
                            .addComponent(jtProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addComponent(jlDescricao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ispDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlValor)
                            .addComponent(jfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(141, 141, 141))
                    .addGroup(jPOsLayout.createSequentialGroup()
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlAberturaChamado, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtAberturaChamado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlFechamentoChamado, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtFechamentoChamado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlImageOS, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPOsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbCriarChamado, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPOs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPOs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarClienteActionPerformed

        SistemaOSCadastroCliente cadastro = new SistemaOSCadastroCliente(null, true);

        cadastro.setVisible(true);
    }//GEN-LAST:event_jbCadastrarClienteActionPerformed

    private void jbCriarChamadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCriarChamadoActionPerformed

        try {

            Usuario u = new UsuarioDAO().buscarPorLogin(jcbFuncionario.getSelectedItem().toString());

            Cliente c = new ClienteDAO().buscarPorCpf(jcbCliente.getSelectedItem().toString());

            os.setCliente(c);
            os.setFuncionario(u);
            os.setDescricao(jtaDescricao.getText());
            os.setValor(converterEmDouble(jfValor.getText()));

            new OrdemServicoDAO().inserir(os);

            SistemaOSDashBoard db = new SistemaOSDashBoard();

            JOptionPane.showMessageDialog(this, "Ordem de Serviço criada!");

            setVisible(false);
            dispose();

            db.setVisible(true);

        } catch (ClassNotFoundException | SQLException ex) {

            JOptionPane.showMessageDialog(this, "Problema ao acessar o Banco de Dados");

        }
    }//GEN-LAST:event_jbCriarChamadoActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed

        setVisible(false);
        dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OS dialog = new OS(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ispDescricao;
    private javax.swing.JPanel jPOs;
    private javax.swing.JButton jbCadastrarCliente;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbCriarChamado;
    private javax.swing.JComboBox<String> jcbCliente;
    private javax.swing.JComboBox<String> jcbFuncionario;
    private javax.swing.JFormattedTextField jfValor;
    private javax.swing.JLabel jlAberturaChamado;
    private javax.swing.JLabel jlCliente;
    private javax.swing.JLabel jlDescricao;
    private javax.swing.JLabel jlFechamentoChamado;
    private javax.swing.JLabel jlFuncinario;
    private javax.swing.JLabel jlImageOS;
    private javax.swing.JLabel jlProtocolo;
    private javax.swing.JLabel jlValor;
    private javax.swing.JTextField jtAberturaChamado;
    private javax.swing.JTextField jtFechamentoChamado;
    private javax.swing.JTextField jtProtocolo;
    private javax.swing.JTextArea jtaDescricao;
    // End of variables declaration//GEN-END:variables

    private double converterEmDouble(String text) {

        String valorS = jfValor.getText();

        String valorN = valorS.replaceAll("[^\\d,]", "");

        valorN = valorN.replace(",", ".");

        double valor = Double.parseDouble(valorN);

        return valor;
    }

    private void geraListaFuncionarios() {

        for (Usuario usuario : usuarios) {

            jcbFuncionario.addItem(usuario.getNome());
        }

    }

    private void geraListaClientes() {

        for (Cliente cliente : clientes) {

            jcbCliente.addItem(cliente.getCpf());
        }

    }

    private String formataDataString(Timestamp tempo) {

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String formattedTimestamp = sdf.format(tempo);

        return formattedTimestamp;

    }

    void preparedEdit(OrdemServico os) {
        
        
        
    }

}
