/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.br.vianna.sistemaos.view;

import com.br.vianna.sistemaos.DAO.impl.ClienteDAO;
import com.br.vianna.sistemaos.DAO.impl.UsuarioDAO;
import com.br.vianna.sistemaos.model.Cliente;
import com.br.vianna.sistemaos.model.Usuario;
import com.br.vianna.sistemaos.model.tipos.ESexo;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author arthu
 */
public class SistemaOSCadastroCliente extends javax.swing.JDialog {

    /**
     * Creates new form SistemaOSCadastroCliente
     */
    public SistemaOSCadastroCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlNome = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        jlCpf = new javax.swing.JLabel();
        jtCpf = new javax.swing.JTextField();
        jlSexo = new javax.swing.JLabel();
        jcbSexo = new javax.swing.JComboBox<>();
        jlDataNasc = new javax.swing.JLabel();
        jfDataNasc = new javax.swing.JFormattedTextField();
        jlTelefone = new javax.swing.JLabel();
        jtTelefone = new javax.swing.JTextField();
        jlEmail = new javax.swing.JLabel();
        jtEmail = new javax.swing.JTextField();
        jlCep = new javax.swing.JLabel();
        jtCep = new javax.swing.JTextField();
        jlRua = new javax.swing.JLabel();
        jtRua = new javax.swing.JTextField();
        jlBairro = new javax.swing.JLabel();
        jtBairro = new javax.swing.JTextField();
        jlCidade = new javax.swing.JLabel();
        jtCidade = new javax.swing.JTextField();
        jlFuncionario = new javax.swing.JLabel();
        jcbFuncionario = new javax.swing.JComboBox<>();
        jbCriar = new javax.swing.JButton();
        jbCancelarCadastro = new javax.swing.JButton();
        jlImagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(856, 531));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jlNome.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlNome.setForeground(new java.awt.Color(250, 100, 65));
        jlNome.setText("*Nome:");

        jlCpf.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlCpf.setForeground(new java.awt.Color(250, 100, 65));
        jlCpf.setText("*CPF:");

        jtCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCpfFocusLost(evt);
            }
        });

        jlSexo.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlSexo.setForeground(new java.awt.Color(250, 100, 65));
        jlSexo.setText("*Sexo:");

        jcbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Masculino", "Feminino" }));

        jlDataNasc.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 16)); // NOI18N
        jlDataNasc.setForeground(new java.awt.Color(250, 100, 65));
        jlDataNasc.setText("Data Nascimento:");

        jfDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd-MM-yyyy"))));
        jfDataNasc.setToolTipText("dd-MM-yyyy");

        jlTelefone.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlTelefone.setForeground(new java.awt.Color(250, 100, 65));
        jlTelefone.setText("Telefone:");

        jlEmail.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlEmail.setForeground(new java.awt.Color(250, 100, 65));
        jlEmail.setText("E-mail:");

        jlCep.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlCep.setForeground(new java.awt.Color(250, 100, 65));
        jlCep.setText("*CEP:");

        jlRua.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlRua.setForeground(new java.awt.Color(250, 100, 65));
        jlRua.setText("Rua:");

        jlBairro.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlBairro.setForeground(new java.awt.Color(250, 100, 65));
        jlBairro.setText("Bairro:");

        jlCidade.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlCidade.setForeground(new java.awt.Color(250, 100, 65));
        jlCidade.setText("Cidade:");

        jlFuncionario.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jlFuncionario.setForeground(new java.awt.Color(250, 100, 65));
        jlFuncionario.setText("*Funcionario:");

        jcbFuncionario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));

        jbCriar.setBackground(new java.awt.Color(250, 133, 65));
        jbCriar.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 16)); // NOI18N
        jbCriar.setForeground(new java.awt.Color(255, 255, 255));
        jbCriar.setText("Criar");
        jbCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCriarActionPerformed(evt);
            }
        });

        jbCancelarCadastro.setBackground(new java.awt.Color(250, 133, 65));
        jbCancelarCadastro.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 16)); // NOI18N
        jbCancelarCadastro.setForeground(new java.awt.Color(255, 255, 255));
        jbCancelarCadastro.setText("Cancelar");
        jbCancelarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarCadastroActionPerformed(evt);
            }
        });

        jlImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/OSCadastroCliente2.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jbCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbCancelarCadastro)
                                .addGap(59, 59, 59))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jlDataNasc)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jfDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jlNome)
                                                .addComponent(jlCpf)
                                                .addComponent(jlSexo))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jlCep)
                                                .addComponent(jlRua)
                                                .addComponent(jlBairro)
                                                .addComponent(jlCidade)
                                                .addComponent(jlTelefone)
                                                .addComponent(jlEmail))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jtCep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(jtRua, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                                            .addComponent(jtBairro, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                                            .addComponent(jtCidade))))))))
                                .addGap(57, 57, 57))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jlFuncionario)
                        .addGap(18, 18, 18)
                        .addComponent(jcbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jlImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlCpf)
                            .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlSexo)
                            .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlDataNasc)
                            .addComponent(jfDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlTelefone)
                            .addComponent(jtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlEmail)
                            .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlCep)
                            .addComponent(jtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlRua)
                                .addGap(18, 18, 18)
                                .addComponent(jlBairro)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlCidade)
                                    .addComponent(jtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlFuncionario)
                            .addComponent(jcbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbCancelarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCriarActionPerformed

        if (verificaCamposObrigatorios()) {

            Usuario funcionario;

            try {

                LocalDate localDate = null;

                String dataString = jfDataNasc.getText();

                if (!dataString.equalsIgnoreCase("")) {

                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                    localDate = LocalDate.parse(dataString, formatter);

                }

                funcionario = new UsuarioDAO().buscarPorLogin(jcbFuncionario.getSelectedItem().toString());

                if (jcbSexo.getSelectedItem().toString().equals("Masculino")) {

                    if (cliente == null) {

                        cliente = new Cliente(0, jtNome.getText(),
                                jtCpf.getText(), localDate, ESexo.M, jtTelefone.getText(),
                                jtRua.getText(), jtBairro.getText(), jtCidade.getText(),
                                jtCep.getText(), jtEmail.getText(), null, funcionario);

                        new ClienteDAO().inserir(cliente);

                        JOptionPane.showMessageDialog(this, "Cadastro realizado com sucesso!");

                    } else {

                        cliente.setNome(jtNome.getText());
                        cliente.setCpf(jtCpf.getText());
                        cliente.setSexo(ESexo.M);
                        cliente.setTelefone(jtTelefone.getText());
                        cliente.setEndereco(jtRua.getText());
                        cliente.setBairro(jtBairro.getText());
                        cliente.setCidade(jtCidade.getText());
                        cliente.setCep(jtCep.getText());
                        cliente.setEmail(jtEmail.getText());
                        cliente.setFuncionario(funcionario);

                        new ClienteDAO().editar(cliente);

                        JOptionPane.showMessageDialog(this, "Cadastro alterado com sucesso!");
                    }

                } else {

                    if (cliente == null) {

                        cliente = new Cliente(0, jtNome.getText(),
                                jtCpf.getText(), localDate, ESexo.F, jtTelefone.getText(),
                                jtRua.getText(), jtBairro.getText(), jtCidade.getText(),
                                jtCep.getText(), jtEmail.getText(), null, funcionario);

                        new ClienteDAO().inserir(cliente);

                        JOptionPane.showMessageDialog(this, "Cadastro realizado com sucesso!");
                    } else {

                        cliente.setNome(jtNome.getText());
                        cliente.setCpf(jtCpf.getText());
                        cliente.setSexo(ESexo.F);
                        cliente.setTelefone(jtTelefone.getText());
                        cliente.setEndereco(jtRua.getText());
                        cliente.setBairro(jtBairro.getText());
                        cliente.setCidade(jtCidade.getText());
                        cliente.setCep(jtCep.getText());
                        cliente.setEmail(jtEmail.getText());
                        cliente.setFuncionario(funcionario);

                        new ClienteDAO().editar(cliente);

                        JOptionPane.showMessageDialog(this, "Cadastro alterado com sucesso!");
                    }

                }

                setVisible(false);
                dispose();

            } catch (ClassNotFoundException | SQLException ex) {

                JOptionPane.showMessageDialog(this, "Problema ao acessar o Banco de Dados");

            }

        } else {

            JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios(*)");

        }
    }//GEN-LAST:event_jbCriarActionPerformed

    private void jbCancelarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarCadastroActionPerformed

        setVisible(false);
        dispose();

    }//GEN-LAST:event_jbCancelarCadastroActionPerformed

    private void jtCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCpfFocusLost

        Cliente cliente;

        try {

            cliente = new ClienteDAO().buscarPorCpf(jtCpf.getText());

            if (cliente != null) {

                JOptionPane.showMessageDialog(this, "CPF já cadastrado!");

                jtCpf.setText("");
            }

        } catch (ClassNotFoundException | SQLException ex) {

            JOptionPane.showMessageDialog(this, "Problema ao acessar o Banco de Dados");

        }

    }//GEN-LAST:event_jtCpfFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        ArrayList<Usuario> usuarios;
        try {
            usuarios = new UsuarioDAO().buscarTodos();

            for (Usuario usuario : usuarios) {

                jcbFuncionario.addItem(usuario.getLogin());

            }

        } catch (ClassNotFoundException | SQLException ex) {

            JOptionPane.showMessageDialog(this, "Problema ao acessar o Banco de Dados");
        }

    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SistemaOSCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SistemaOSCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SistemaOSCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemaOSCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SistemaOSCadastroCliente dialog = new SistemaOSCadastroCliente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCancelarCadastro;
    private javax.swing.JButton jbCriar;
    private javax.swing.JComboBox<String> jcbFuncionario;
    private javax.swing.JComboBox<String> jcbSexo;
    private javax.swing.JFormattedTextField jfDataNasc;
    private javax.swing.JLabel jlBairro;
    private javax.swing.JLabel jlCep;
    private javax.swing.JLabel jlCidade;
    private javax.swing.JLabel jlCpf;
    private javax.swing.JLabel jlDataNasc;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlFuncionario;
    private javax.swing.JLabel jlImagem;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlRua;
    private javax.swing.JLabel jlSexo;
    private javax.swing.JLabel jlTelefone;
    private javax.swing.JTextField jtBairro;
    private javax.swing.JTextField jtCep;
    private javax.swing.JTextField jtCidade;
    private javax.swing.JTextField jtCpf;
    private javax.swing.JTextField jtEmail;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtRua;
    private javax.swing.JTextField jtTelefone;
    // End of variables declaration//GEN-END:variables

    private Cliente cliente;

    private boolean verificaCamposObrigatorios() {

        if (jtNome.getText().equalsIgnoreCase("")
                || jtCpf.getText().equalsIgnoreCase("")
                || jcbSexo.getSelectedItem().toString().equalsIgnoreCase("")
                || jtCep.getText().equalsIgnoreCase("")
                || jcbFuncionario.getSelectedItem().toString().equalsIgnoreCase("")) {

            return false;

        }

        return true;
    }

    void preparedEdit(Cliente cliente) {

        this.cliente = cliente;

        jtNome.setText(cliente.getNome());
        jtCpf.setText(cliente.getCpf());
        jcbSexo.setSelectedItem(cliente.getSexo());
        jtTelefone.setText(cliente.getTelefone());
        jtRua.setText(cliente.getEndereco());
        jtBairro.setText(cliente.getBairro());
        jtCidade.setText(cliente.getCidade());
        jtCep.setText(cliente.getCep());
        jtEmail.setText(cliente.getEmail());
        jcbFuncionario.setSelectedItem(cliente.getFuncionario());

    }
}
